# frozen-string-literal: true

# app/models/swars/membership_medal_info.rb
# app/javascript/user_stat_show.vue
module Swars
  module UserStat
    class MedalInfo
      include ApplicationMemoryRecord
      memory_record [
        # 順番はロジックに影響ないが表示順序が変わる
        { key: "居飛車党",           medal_params: { message: "居飛車党",                                     method: "raw",  name: "⬆️",                 type: nil,                            }, if_cond: proc { win_tag.group_ibis?                                                                                                                                                },},
        { key: "振り飛車党",         medal_params: { message: "振り飛車党",                                   method: "raw",  name: "⬅️",                type: nil,                             }, if_cond: proc { win_tag.group_furi?                                                                                                                                          },},
        { key: "オールラウンダー",   medal_params: { message: "オールラウンダー",                             method: "icon", name: "augmented-reality", type: nil,                            }, if_cond: proc { win_tag.group_ar?                                                                                                                     },},
        { key: "嬉野マン",           medal_params: { message: "嬉野流で勝った",                               method: "raw",  name: "↗️",                type: nil,                             }, if_cond: proc { win_tag.exist?(:"嬉野流") || win_tag.exist?(:"新嬉野流")                                                                                                     },},
        { key: "パックマン野郎",     medal_params: { message: "パックマンで勝った",                           method: "icon", name: "pac-man",           type: "is-warning",                   }, if_cond: proc { win_tag.exist?(:"パックマン戦法")                                                                                                                                          },},
        { key: "耀龍マン",           medal_params: { message: "耀龍戦法で勝った",                             method: "raw",  name: "🐉",                type: nil,                            }, if_cond: proc { win_tag.to_s.include?("耀龍") }, },
        { key: "右玉マン",           medal_params: { message: "右玉で勝った",                                 method: "raw",  name: "🌛",                 type: nil,                           }, if_cond: proc { win_tag.to_s.include?("右玉") }, },
        { key: "ロケットマン",       medal_params: { message: "ロケットで勝った",                             method: "raw",  name: "🚀",                type: nil,                            }, if_cond: proc { win_tag.exist?(:"ロケット")                                                                                                                                                },},
        { key: "遠見の角マン",       medal_params: { message: "遠見の角で勝った",                             method: "raw",  name: "🔭",                type: nil,                            }, if_cond: proc { win_tag.exist?(:"遠見の角")                                                                                                                                                },},
        { key: "屋敷マン",           medal_params: { message: "屋敷流二枚銀で勝った",                         method: "raw",  name: "🥷",                type: nil,                            }, if_cond: proc { win_tag.exist?(:"屋敷流二枚銀") || win_tag.exist?(:"屋敷流二枚銀棒銀型")                                                                                        },},
        { key: "UFOマン",            medal_params: { message: "UFO銀で勝った",                                method: "raw",  name: "🛸",                type: nil,                            }, if_cond: proc { win_tag.exist?(:"UFO銀")                                                                                                                                                   },},
        { key: "カニ執着マン",       medal_params: { message: "カニ系戦法で勝った",                           method: "raw",  name: "🦀",                type: nil,                            }, if_cond: proc { win_tag.exist?(:"カニカニ銀") || win_tag.exist?(:"カニカニ金") || win_tag.exist?(:"カニ囲い") || win_tag.exist?(:"カニ缶囲い") },},
        { key: "一間飛車マン",       medal_params: { message: "一間飛車で勝った",                             method: "raw",  name: "1️⃣",                 type: nil,                            }, if_cond: proc { win_tag.exist?(:"一間飛車") || win_tag.exist?(:"一間飛車穴熊") }, },
        { key: "カメレオンマン",     medal_params: { message: "カメレオン系戦法で勝った",                     method: "raw",  name: "🦎",                type: nil,                            }, if_cond: proc { win_tag.exist?(:"英春流カメレオン") || win_tag.exist?(:"カメレオン戦法")                                                                                 },},
        { key: "ポンポンマン",       medal_params: { message: "ポンポン桂で勝った",                           method: "raw",  name: "🐴",                type: nil,                            }, if_cond: proc { win_tag.exist?(:"ポンポン桂")                                                                                                                                              },},
        { key: "右四間飛車マン",     medal_params: { message: "右四間飛車で勝った",                           method: "raw",  name: "⚔",                 type: nil,                            }, if_cond: proc { win_tag.exist?(:"右四間飛車") || win_tag.exist?(:"右四間飛車急戦") || win_tag.exist?(:"右四間飛車左美濃") }},
        { key: "穴熊マン",           medal_params: { message: "穴熊で勝った",                                 method: "raw",  name: "🐻",                type: nil,                            }, if_cond: proc { win_tag.to_s.include?("熊")                                                                                                                                                },},
        { key: "ダイヤマン",         medal_params: { message: "ダイヤモンド美濃で勝った",                     method: "raw",  name: "💎",                type: nil,                            }, if_cond: proc { win_tag.exist?(:"ダイヤモンド美濃")                                                                                                                                        },},
        { key: "チョコレートマン",   medal_params: { message: "チョコレート囲いで勝った",                     method: "raw",  name: "🍫",                type: nil,                            }, if_cond: proc { win_tag.exist?(:"チョコレート囲い")                                                                                                                                        },},
        { key: "幽霊角マン",         medal_params: { message: "幽霊角で勝った",                               method: "raw",  name: "👻",                type: nil,                            }, if_cond: proc { win_tag.exist?(:"幽霊角")                                                                                                                                                  },},
        { key: "極限早繰りマン",     medal_params: { message: "極限早繰り銀で勝った",                         method: "raw",  name: "🏃🏻",              type: nil,                            }, if_cond: proc { win_tag.exist?(:"極限早繰り銀")                                                                                                                                            },},
        { key: "坊主マン",           medal_params: { message: "坊主美濃で勝った",                             method: "raw",  name: "👴🏻",              type: nil,                            }, if_cond: proc { win_tag.exist?(:"坊主美濃")                                                                                                                                                },},
        { key: "袖飛車マン",         medal_params: { message: "袖飛車で勝った",                               method: "raw",  name: "👘",              type: nil,                              }, if_cond: proc { win_tag.exist?(:"袖飛車")                                                                                                                                                  },},
        { key: "中飛車マン",         medal_params: { message: "中飛車で勝った",                               method: "raw",  name: "🀄",                type: nil,                            }, if_cond: proc { win_tag.to_s.include?("中飛車")                                                                                                                                            },},
        { key: "レグスペマン",       medal_params: { message: "レグスペで勝った",                             method: "raw",  name: "🐔",                type: nil,                            }, if_cond: proc { win_tag.exist?(:"レグスペ")                                                                                                                                                },},
        { key: "音無しマン",         medal_params: { message: "居飛穴音無しの構えで勝った",                   method: "raw",  name: "🦉",                type: nil,                            }, if_cond: proc { win_tag.exist?(:"居飛穴音無しの構え")                                                                                                                                      },},
        { key: "筋違い角おじさん",   medal_params: { message: "筋違い角おじさん",                             method: "raw",  name: "👨🏻",              type: nil,                            }, if_cond: proc { all_tag.exist?(:"筋違い角")                                                                                                                                                        },},
        { key: "スイーツマン",       medal_params: { message: "いちご囲いで勝った",                           method: "raw",  name: "🍓",                type: nil,                            }, if_cond: proc { win_tag.exist?(:"いちご囲い")                                                                                                                                              },},
        { key: "無敵囲いマン",       medal_params: { message: "無敵囲いで勝った",                             method: "raw",  name: "🔰",                type: nil,                            }, if_cond: proc { win_tag.exist?(:"無敵囲い")                                                                                                                                                },},
        { key: "背水マン",           medal_params: { message: "大駒全部捨てて勝った",                         method: "raw",  name: "🧠",                type: nil,                            }, if_cond: proc { win_tag.exist?(:"背水の陣")                                                                                                                                                },},
        { key: "エルモマン",         medal_params: { message: "エルモ囲いで勝った",                           method: "raw",  name: "🐒",                type: nil,                            }, if_cond: proc { win_tag.exist?(:"エルモ囲い")                                                                                                                                              },},
        { key: "小部屋マン",         medal_params: { message: "銀冠の小部屋で勝った",                         method: "raw",  name: "🛖",                type: nil,                            }, if_cond: proc { win_tag.exist?(:"銀冠の小部屋")                                                                                                                                            },},
        { key: "鬼殺しマン",         medal_params: { message: "鬼殺しで勝った",                               method: "raw",  name: "👹",                type: nil,                            }, if_cond: proc { win_tag.exist?(:"鬼殺し向かい飛車") || win_tag.exist?(:"鬼殺し") || win_tag.exist?(:"新鬼殺し")                                                                  },},
        { key: "アヒル初級",         medal_params: { message: "アヒル戦法初級者",                             method: "raw",  name: "🐣",                type: nil,                            }, if_cond: proc { (0.1...0.3).cover?(all_tag.ratio(:"アヒル囲い"))                                                                                                                                      },},
        { key: "アヒル中級",         medal_params: { message: "アヒル戦法中級者",                             method: "raw",  name: "🐥",                type: nil,                            }, if_cond: proc { (0.3...0.5).cover?(all_tag.ratio(:"アヒル囲い"))                                                                                                                                      },},
        { key: "アヒル上級",         medal_params: { message: "アヒル戦法上級者",                             method: "raw",  name: "🐤",                type: nil,                            }, if_cond: proc { (0.5..1.0).cover?(all_tag.ratio(:"アヒル囲い")) && win_ratio >= 0.5                                                                                                                   },},

        ################################################################################

        { key: "5連勝",              medal_params: { message: "5連勝した",                                    method: "raw",  name: "🍰",                type: nil,                            }, if_cond: proc { consecutive_wins_and_losses_stat.five_win? },},
        { key: "10連勝",             medal_params: { message: "10連勝した",                                   method: "raw",  name: "💮",                type: nil,                            }, if_cond: proc { consecutive_wins_and_losses_stat.ten_win? },},

        { key: "5連敗",              medal_params: { message: "5連敗した",                                    method: "raw",  name: "🌧",                type: nil,                             }, if_cond: proc { consecutive_wins_and_losses_stat.five_lose? },},
        { key: "10連敗",             medal_params: { message: "10連敗した",                                   method: "raw",  name: "⛈",                type: nil,                             }, if_cond: proc { consecutive_wins_and_losses_stat.ten_lose?   },},

        { key: "波が激しいマン",     medal_params: { message: "勝ち負けの波が激しい",                         method: "raw",  name: "🌊",                type: nil,                            }, if_cond: proc { consecutive_wins_and_losses_stat.waves_strong? },},

        ################################################################################

        # { key: "200手越えマン",      medal_params: { message: "200手以上の対局で勝った",                      method: "raw",  name: "🌊",                type: nil,                            }, if_cond: proc { (turn_stat.max || 0) >= 200 },},

        ################################################################################

        { key: "居玉勝ちマン",       medal_params: { message: "居玉で勝った",                                 method: "raw",  name: "🗿",                type: nil,                            }, if_cond: proc { win_tag.exist?(:"居玉") }, },
        { key: "入玉勝ちマン",       medal_params: { message: "入玉で勝った",                                 method: "raw",  name: "🏈",                 type: nil,                           }, if_cond: proc { win_tag.exist?(:"入玉")                                                                                                                                                    },},
        { key: "切れ負けマン",       medal_params: { message: "切れ負けが多い",                               method: "raw",  name: "⌛",                 type: nil,                           }, if_cond: proc { (user_stat.judge_final_stat.ratio_by(:lose, :TIMEOUT) || 0) >= 0.25 },},
        { key: "切断マン",           medal_params: { message: "切断の使い手",                                 method: "raw",  name: "💩",                type: nil,                            }, if_cond: proc { (user_stat.judge_final_stat.count_by(:lose, :DISCONNECT) || 0).positive? },},
        { key: "レア戦法マン",       medal_params: { message: "変態戦法の使い手",                             method: "raw",  name: "🍀",                type: nil,                            }, if_cond: proc { user_stat.rarity_stat.minority?                                                                                                                                                         },},
        { key: "角不成マン",         medal_params: { message: "角不成で舐めプした",                           method: "raw",  name: "☠",                 type: nil,                            }, if_cond: proc { all_tag.exist?(:"角不成") }           },
        { key: "飛車不成マン",       medal_params: { message: "飛車不成で舐めプした",                         method: "raw",  name: "💀",                type: nil,                            }, if_cond: proc { all_tag.exist?(:"飛車不成") }           },
        { key: "1手詰じらしマン",    medal_params: { message: "1手詰を焦らして歪んだ優越感に浸った",          method: "raw",  name: "😈",                type: nil,                          }, if_cond: proc { user_stat.mate_stat.count.positive? } },
        { key: "絶対投了しないマン", medal_params: { message: "悔しかったので時間切れまで放置した",           method: "raw",  name: "🪳",                type: nil,                            }, if_cond: proc { user_stat.leave_alone_stat.count.positive? } },
        { key: "相手退席待ちマン",   medal_params: { message: "放置に痺れを切らした相手が離席したころを見計らって着手し逆時間切れ勝ちを狙ったが失敗", method: "raw",  name: "🧟",   type: nil, }, if_cond: proc { user_stat.taisekimati_stat.count.positive? } },
        { key: "大長考マン",         medal_params: { message: "対局放棄と受け取られかねない長考をした",       method: "raw",  name: "🚫",                type: nil,                            }, if_cond: proc { user_stat.prolonged_deliberation_stat.count.positive? } },
        { key: "長考マン",           medal_params: { message: "考えすぎて負けがち",                           method: "raw",  name: "🤯",                type: nil,                            }, if_cond: proc { user_stat.overthinking_loss_stat.medal? } },
        { key: "無気力マン",         medal_params: { message: "無気力な対局をした",                           method: "raw",  name: "🦥",                type: nil,                            }, if_cond: proc { user_stat.lethargy_stat.exist? } },
        { key: "開幕千日手",         medal_params: { message: "開幕千日手をした",                             method: "raw",  name: "❓",                type: nil                             }, if_cond: proc { (user_stat.perpetual_check_stat.opening_repetition_move_count || 0).positive? } },
        { key: "ただの千日手",       medal_params: { message: "千日手があった",                               method: "raw",  name: "🍌",                type: nil                             }, if_cond: proc { (user_stat.perpetual_check_stat.over50_draw_count || 0).positive? } },
        { key: "友対マン",           medal_params: { message: "友達対局をした",                               method: "raw",  name: "👬",                 type: nil,                           }, if_cond: proc { user_stat.xmode_stat.exist?(:"友達") } },
        { key: "指導受けマン",       medal_params: { message: "指導対局を受けた",                             method: "raw",  name: "🔥",                type: nil,                            }, if_cond: proc { user_stat.xmode_stat.exist?(:"指導") } },
        { key: "運営支えマン",       medal_params: { message: "将棋ウォーズの運営を支える力がある",           method: "raw",  name: "🧙‍♂️",                type: nil                           }, if_cond: proc { user_stat.fraud_stat.count.positive? } },
      ]
    end
  end
end
