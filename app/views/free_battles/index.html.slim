- @page_title ||= "棋譜一覧"

- if v = modal_record_twitter_options
  - twitter_card_tag(v)
- else
  - twitter_card_tag(title: @page_title)

- content_for :head do
  = javascript_pack_tag("free_battle_index")
  javascript:
    document.addEventListener('DOMContentLoaded', () => { new FreeBattleIndex(#{js_index_options.to_json.html_safe}).$mount("#free_battle_index") })

#free_battle_index(v-cloak)
  = render partial: "modal_shogi_player"

  .title.is-2.yumincho= @page_title

  .tabs
    ul
      - SearchScopeInfo.each do |e|
        li class=("is-active" if params["controller"] == "free_battles" && current_search_scope_key == e.key)
          = link_to(e.name, [:free_battles, query: current_query, search_scope_key: e.key])

  .columns
    .column
      = form_with(url: [ns_prefix, current_plural_key], method: :get, skip_enforcing_utf8: true) do |form|
        - if v = params[:search_scope_key].presence
          = form.hidden_field(:search_scope_key, value: v)
        .field.has-addons
          .control.is-expanded
            / modal にフォーカスできなくなるので autofocus は使ってはいけない
            = form.search_field(:query, class: "input", value: controller.current_query, placeholder: current_placeholder, "v-model": "query", ref: "main_field")
          .control
            = form.button(icon_tag(:magnify), name: nil, class: "button is-info", data: { disable_with: icon_tag(:magnify, :spin) })
            = form.submit("検索") if Rails.env.test?

  = render partial: "table"

  .columns
    .column
      = link_to("投稿", [:new, ns_prefix, current_single_key], class: "button is-primary")

  = render partial: "parmalink"

  .columns
    .column
      article.message.is-primary.is-size-7
        .message-header
          | 使い方
        .message-body.has-text-left
          .content
            ol
              li 行クリックで局面を見れます
              li ログインしてから投稿すると再編集できます
              li ウォーズの棋譜と違って古くなっても消しません
