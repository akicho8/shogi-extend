doctype 5
html(lang="ja")
  head
    meta(charset="UTF-8")
    meta(http-equiv="X-UA-Compatible" content="IE=Edge,chrome=1")
    meta(name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no")

    link(rel="stylesheet" href="https://use.fontawesome.com/releases/v5.0.13/css/all.css")
    link(rel="stylesheet" href="//cdn.materialdesignicons.com/2.0.46/css/materialdesignicons.min.css")

    link(rel="apple-touch-icon" href=path_to_image(@apple_touch_icon || "apple-touch-icon.png"))

    sass:
      [v-cloak]
        /* important 指定しないと効かないのが謎 */
        display: none ! important

    = favicon_link_tag
    = csrf_meta_tag
    title= html_title
    = action_cable_meta_tag

    javascript:
      var js_global = #{js_global.to_json.html_safe}

    / sprockets
    = stylesheet_link_tag "application"
    = javascript_include_tag "application"

    / webpack
    = stylesheet_pack_tag "application"
    = javascript_pack_tag "application"

    = render "google_analytics" if Rails.env.production?

    / ActionCable
    = javascript_pack_tag("system_notification")
    - if current_user
      = javascript_pack_tag("single_notification")

    - unless content_for?(:twitter_card_tag)
      - twitter_card_tag(description: "将棋に関連するプログラムの実験的なサイトです。ネット対戦・CPU対戦・将棋ウォーズ棋譜検索・棋譜変換などができます", image: "swars_battles_index.png")
    = yield(:twitter_card_tag)

    = yield :head
  body
    - if @simple_layout
      .container.is-fluid
        == flash_danger_notify_tag
        = yield
        == controller.eval_box
      footer.footer
        .container.is-fluid
          .columns
            .column.has-text-centered
              #system_notification_app.has-text-grey-lighter.is-size-7
                | ActionCable: {{latest_system_logs.join(" ")}}
    - else
      nav.navbar.is-transparent.is-primary
        .navbar-brand
          = link_to(AppConfig[:app_name], :root, :class => "navbar-item")
          .navbar-burger.burger(data-target="main_navar")
            span
            span
            span
        #main_navar.navbar-menu
          .navbar-start
            / ここでの is-active に意味はない
            = link_to("ネット対戦", [:colosseum, :battles], class: ["navbar-item", ("is-active" if params[:controller].start_with?("colosseum/battles"))])
            = link_to("CPUと練習対局", :cpu_battles, class: ["navbar-item", ("is-active" if params[:controller] == "cpu_battles")])
            = link_to("将棋ウォーズ棋譜検索", [:swars, :basic], class: ["navbar-item", ("is-active" if params[:controller].start_with?("swars/battles"))])
            = link_to("将棋ウォーズプレイヤー情報", [:swars, :player_infos], class: ["navbar-item", ("is-active" if params[:controller] == "swars/player_infos")])
            = link_to("棋譜入力", [:new, :free_battle], class: ["navbar-item", ("is-active" if params[:controller].start_with?("free_battles") && params[:action] == "new")])
            .navbar-item.has-dropdown.is-hoverable
              span.navbar-link もっと見る
              .navbar-dropdown.is-boxed
                = link_to("棋譜一覧", [:free_battles], class: ["navbar-item", ("is-active" if params[:controller].start_with?("free_battles") && params[:action] == "index")])
                = link_to("局面編集", :position_editor, class: ["navbar-item", ("is-active" if params[:controller] == "position_editor")])
                = link_to("戦法トリガー事典", :tactic_notes, class: ["navbar-item", ("is-active" if params[:controller] == "tactic_notes")])
                = link_to("符号入力ゲーム", :xy, class: ["navbar-item", ("is-active" if params[:controller] == "xy_game")])
                = link_to("2ch棋譜検索", [:general, :s], class: ["navbar-item", ("is-active" if params[:controller].start_with?("general/battles"))])

          #header_app.navbar-end(v-cloak)
            = link_to("production", production_app_url, class: ["navbar-item"], target: "_blank") unless Rails.env.production?

            / - unless current_user
            /   = link_to("アカウント作成", [:new, :colosseum, :session], class: "navbar-item")
            /
            / - if current_user
            /   .navbar-item
            /     b-dropdown(hoverable)
            /       = link_to([current_user], class: "navbar-link", slot: "trigger") do
            /         = image_tag(current_user.avatar_url, class: "header_avatar_image")
            /         span.my_name
            /           = current_user.name
            /       b-dropdown-item(:has-link="true" :paddingless="true")
            /         = link_to("プロフィール", [current_user], id: "header_profile_show")
            /       b-dropdown-item(:has-link="true" :paddingless="true")
            /         = link_to("設定", [:edit, current_user])
            /       - unless current_user
            /         b-dropdown-item(:separator="true")
            /         b-dropdown-item(:has-link="true" :paddingless="true")
            /           = link_to("Googleアカウントでログイン", :xuser_google_oauth2_callback_function_omniauth_authorize, class: "navbar-item")
            /       b-dropdown-item(:separator="true")
            /       b-dropdown-item(:has-link="true" :paddingless="true")
            /         = link_to("ログアウト", [:colosseum, :session], method: :delete)

            - if current_user
              .navbar-item.has-dropdown.is-hoverable
                = link_to([current_user], class: "navbar-link", slot: "trigger") do
                  = image_tag(current_user.avatar_url, class: "header_avatar_image")
                  span.my_name
                    = current_user.name
                .navbar-dropdown.is-boxed
                  = link_to("プロフィール", [current_user], class: "navbar-item")
                  = link_to("設定", [:edit, current_user], class: "navbar-item")
                  .navbar-divider
                  = link_to("ログアウト", [:colosseum, :session], method: :delete, class: "navbar-item")
                  / = link_to "ログアウト", destroy_xuser_session_path, method: :delete

              / こっちを使うと縦幅が大きくなってしまう
              / span.navbar-item
              /   b-dropdown(hoverable)
              /     = link_to([current_user], class: "navbar-link", slot: "trigger") do
              /       = image_tag(current_user.avatar_url, class: "header_avatar_image")
              /       span.my_name
              /         = current_user.name
              /     b-dropdown-item(:has-link="true" :paddingless="true")
              /       = link_to("プロフィール", [current_user], id: "header_profile_show")
              /     b-dropdown-item(:has-link="true" :paddingless="true")
              /       = link_to("設定", [:edit, current_user])
              /     b-dropdown-item(:separator="true")
              /     b-dropdown-item(:has-link="true" :paddingless="true")
              /       = link_to("ログアウト", [:colosseum, :session], method: :delete)
              /       / = link_to "ログアウト", destroy_xuser_session_path, method: :delete

            - if !current_user
              = link_to("ログイン", :new_xuser_session, class: "navbar-item")
              = link_to("アカウント登録", :new_xuser_registration, class: "navbar-item")
              / .navbar-item.has-dropdown.is-hoverable
              /   span.navbar-link ログイン
              /   .navbar-dropdown.is-boxed
              /     = link_to("Googleアカウントでログイン", :new_xuser_registration, class: "navbar-item")
              /     = link_to("Googleアカウントでログイン", :xuser_google_oauth2_callback_function_omniauth_authorize, class: "navbar-item")

            .navbar-item
              | オンライン{{online_only_count}}人
            .navbar-item
              | 対局中{{fighter_only_count}}人

      - if false
        .nav.navbar.is-primary(role="navigation" aria-label="main navigation")
          .navbar-brand
            = link_to(AppConfig[:app_name], :root, :class => "navbar-item")

        section.hero.is-primary.is-bold
          .hero-head
            nav.navbar
              .container
                .navbar-brand
                  / a.navbar-item
                  /   = link_to(AppConfig[:app_name], :root, class: "navbar-brand")
                  span.navbar-burger.burger[data-target="navbarMenuHeroA"]
                    span
                    span
                    span
                #header_app.navbar-menu(v-cloak)
                  .navbar-end
                    span.navbar-item
                      = link_to("{{online_only_count}}", [:colosseum, :battles], :class => ["button", "is-primary", "is-inverted"])
                / #navbarMenuHeroA.navbar-menu
                /   .navbar-end
                /     a.navbar-item.is-active
                /       |  Home
                /     a.navbar-item
                /       |  Examples
                /     a.navbar-item
                /       |  Documentation
                /     span.navbar-item
                /       a.button.is-primary.is-inverted
                /         span.icon
                /           i.fab.fa-github
                /         span
                /           | Download
          .hero-body
            .container.has-text-centered
              = link_to(:root) do
                h1.title= AppConfig[:app_name]
          .hero-foot
            .tabs.is-boxed.is-centered
              .container
                ul
                  li class=("is-active" if params[:controller].start_with?("colosseum/battles"))   = link_to("ネット対戦", [:colosseum, :battles])
                  li class=("is-active" if params[:controller] == "cpu_battles")                = link_to("CPUと練習対局", :cpu_battles)
                  li class=("is-active" if params[:controller].start_with?("swars/battles"))   = link_to("将棋ウォーズ棋譜検索", [:swars, :basic])
                  li class=("is-active" if params[:controller] == "tactic_notes")              = link_to("戦法トリガー事典", :tactic_notes)
                  li class=("is-active" if params[:controller].start_with?("free_battles"))    = link_to("棋譜入力", [:new, :free_battle])
                  li class=("is-active" if params[:controller] == "position_editor")           = link_to("局面編集", :position_editor)
                  li class=("is-active" if params[:controller] == "xy_game")                   = link_to("符号入力ゲーム", :xy)
                  li class=("is-active" if params[:controller].start_with?("general/battles")) = link_to("2ch棋譜検索", [:general, :s])

      section.section
        .container.is-fluid.main_container
          == flash_danger_notify_tag
          = yield
          == controller.eval_box

      footer.footer
        .container.is-fluid
          .columns
            .column
              ul
                li= link_to(image_tag("made-with-bulma.png", width: "128", height: "24"), "https://bulma.io", target: "_blank")
                li== "&nbsp;"
                li= link_to("GraphQL API", :graphiql_rails, target: "_blank")
            .column
              ul
                li= link_to("プライバシー", [:about, id: :privacy_policy])
                li= link_to("利用規約", [:about, id: :terms])
                li= link_to("クレジット", [:about, id: :credit])
                li= link_to("問い合わせ", "http://twitter.com/sgkinakomochi", target: "_blank")
                - if Rails.env.development?
                  li= link_to("404", root_path + "404.html")
                  li= link_to("422", root_path + "422.html")
                  li= link_to("500", root_path + "500.html")
            .column
              ul
                ul= link_to("shogi-player", "https://akicho8.github.io/shogi-player/", target: "_blank")
                ul= link_to("shogi_web", "https://github.com/akicho8/shogi_web", target: "_blank")
                ul= link_to("bioshogi", "https://github.com/akicho8/bioshogi", target: "_blank")
                ul= link_to("将棋用語辞書", "https://github.com/akicho8/SKK-JISYO.shogi", target: "_blank")
                ul= link_to("shogi-mode.el", "https://github.com/akicho8/shogi-mode", target: "_blank")
          .column
            .column
              .has-text-centered.no-decoration
                = "Powered by "
                = link_to("Ruby #{RUBY_VERSION}", "https://www.ruby-lang.org/", target: "_blank", :class => "no-decoration")
                = " and "
                = link_to("Rails #{Rails.version}", "https://rubyonrails.org/", target: "_blank", :class => "no-decoration")

                #system_notification_app.has-text-grey-lighter.is-size-7
                  | ActionCable: {{latest_system_logs.join(" ")}}

    #single_notification_app

    javascript:
      var flash_light_notify = #{flash_light_notify.to_json.html_safe}
      document.addEventListener('DOMContentLoaded', () => {
        if (_) {
          _.forIn(flash_light_notify, (message, key) => {
            Vue.prototype.$toast.open({message: message, position: "is-bottom", type: `is-${key}`, duration: 1000 * 2, queue: false})
          })
        }
      })
