javascript:
  var lobby_app_params = #{@lobby_app_params.to_json.html_safe}
  var chat_room_app_params = #{@chat_room_app_params.to_json.html_safe}

- content_for :head do
  = javascript_pack_tag("chat_room")

#chat_room_app v-cloak="true"
  template v-if="room_name_edit_p"
    input.input.is-large v-model.trim="room_name" @keyup.enter="room_name_edit_p = false" @blur="room_name_edit_p = false" ref="room_name_input"
  template v-else=""
    .title.is-5 v-text="room_name" @click="room_name_click"

  .columns
    .column.is-two-thirds
      .box
        div v-if="begin_at"
          nav.level
            .level-item.has-text-centered
              div
                / p.heading 残り時間
                p.title v-html="time_format('white')"
            template v-if="!end_at && current_membership_is_self_p"
              .level-item.has-text-centered
                div
                  button.button.is-primary.is-outlined(@click="give_up_trigger") 投了
            .level-item.has-text-centered
              div
                / p.heading 残り時間
                p.title v-html="time_format('black')"

        - if Rails.env.development?
            | clock_counter: {{clock_counter}}<br>

        shogi-player(
          :run_mode="run_mode"
          :kifu_body="kifu_body_sfen"
          :key_event_capture="false"
          :slider_show="!any_controller_hide"
          :sfen_show="!any_controller_hide"
          :controller_show="!any_controller_hide"
          :theme="'real'"
          :size="'x-large'"
          :sound_effect="true"
          :volume=AppConfig[:volume]
          @update:play_mode_long_sfen="play_mode_long_sfen_set"
          :human_side="human_side_key"
          :flip="flip"
        )
      - if Rails.env.development?
        .box
          | current_location: {{current_location.key}}<br>
          | clock_counter: {{clock_counter}}<br>
          | clock_counts: {{clock_counts}}<br>
          | human_side_key: {{human_side_key}}<br>
          | current_membership_is_self_p: {{current_membership_is_self_p}}<br>
          | flip: {{flip}}<br>

      .box
        .title.is-5= "棋譜"
        pre.pre-wrap(v-text="human_kifu_text")

    .column
      .box.chat_container
        / .title.is-5= "チャット"

        table.table.is-narrow.is-fullwidth
          tr v-for="e of latest_room_chat_messages"
            td
              img.chat_message_avatar_image(:src="e.chat_user.avatar_url")
              span.has-text-grey
                messenger :message_to="e.chat_user"
                = "： "
              = " "
              span v-html="e.message"

        / template v-for="e of latest_room_chat_messages"
        /   article.media
        /     figure.media-left
        /       p.image.is-16x16
        /         img(:src="e.chat_user.avatar_url")
        /     .media-content
        /       .field
        /         p.control
        /           = "{{e.chat_user.name}}： "
        /           span(v-html="e.message")

        article.media
          figure.media-left
            p.image.is-64x64
              - if current_chat_user.avatar.attached?
                = image_tag current_chat_user.avatar
              - else
                = image_tag("character_game_syougi.png")

          .media-content
            .field
              p.control
                input.input.is-large type="text" autocomplete="off" v-model.trim="message" @keydown.enter="message_enter"
            nav.level
              .level-left
                .level-item
                  button.button.is-primary @click="message_enter"
                    | 送信
              / .level-right
              /   .level-item
              /     label.checkbox
              /       input[type="checkbox"]
              /       |  Press enter to submit

      .box
        b-table(:data="room_members")
          template slot-scope="props"
            b-table-column(label="対局者")
              messenger(:message_to="props.row.chat_user")
              = " "
              template(v-if="props.row.fighting_now_at")
                b-icon(icon="access-point" class="has-text-success" custom-size="mdi-18px")
              template(v-else)
                b-icon(icon="access-point" class="has-text-grey-lighter")
              template(v-if="user_self_p(props.row.chat_user)")
                = " ★"
            b-table-column(label="手番")
              | {{location_key_name(props.row)}}
              | {{location_mark(props.row)}}

      template(v-if="!_.isEmpty(watch_users)")
        .box
          .title.is-5= "観戦者"
          b-table(:data="watch_users")
            template slot-scope="props"
              b-table-column(field="name" label="名前" sortable)
                messenger :message_to="props.row"
                template v-if="user_self_p(props.row)"
                  = " *"

  - if Rails.env.development?
    .columns
      .column
        .box
          .title.is-5 Vue Internal Variables
          table.table(border=1)
            tr(v-for="(value, key) in $data")
              th v-text="key"
              td v-text="value"
        .box
          .title.is-5 Vue Computed Results
          table.table(border=1)
            tr(v-for="(e, key) in _computedWatchers")
              th v-text="key"
              td v-text="e.value"

  p
    = link_to("ロビーに戻る", [:resource_ns1, :chat_rooms], :class => "button")

/ br
/ br
/ .box
/   .title.is-5= "@chat_room_app_params"
/   = html_format(JSON.load(@chat_room_app_params.to_json))
/
/ .box
/   = html_format({"cookies.signed[:chat_user_id]" => cookies.signed[:chat_user_id]})
/
/ .box
/   .title.is-5= "ChatUser"
/   = html_format(current_record.chat_users)
/   .title.is-5= "RoomChatMessage"
/   = html_format(current_record.room_chat_messages)

/ #lobby_app
/   - if Rails.env.development?
/     = "{{latest_status_list}}"
