javascript:
  var lobby_app_params = #{@lobby_app_params.to_json.html_safe}
  var chat_room_app_params = #{@chat_room_app_params.to_json.html_safe}

- content_for :head do
  = javascript_pack_tag("chat_room")

javascript:
  document.addEventListener('DOMContentLoaded', () => {
    App.chat_vm.room_chat_messages = #{current_record.room_chat_messages.order(:created_at).last(10).to_json(include: [:chat_user, :chat_room]).html_safe}
    App.chat_vm.human_kifu_text = #{current_record.human_kifu_text_get.to_json.html_safe}
    App.chat_vm.room_name = #{current_record.name.to_json.html_safe}
  })

#chat_room_app v-cloak="true"
  template v-if="room_name_edit_p"
    input.input.is-large v-model.trim="room_name" @keyup.enter="room_name_edit_p = false" @blur="room_name_edit_p = false" ref="room_name_input"
  template v-else=""
    .title.is-4 v-text="room_name" @click="room_name_click"

  template v-if="!battle_begin_at"
    .columns
      .column
        .box
          button.button.is-primary.is-large @click="game_start" バトル開始！
          / | &nbsp;
          / b-dropdown(:value="ps_preset_key" @input="preset_key_update")
          /   button.button.is-large(slot="trigger")
          /     span
          /       | {{current_preset_info1.name}}
          /     b-icon(icon="menu-down")
          /   b-dropdown-item(v-for="record in preset_infos" :value="record.key" :key="record.key")
          /     | {{record.name}}
          | &nbsp;
          button.button.is-large @click="location_flip_all" 手番反転
          | &nbsp;
          b-dropdown(:value="current_lifetime_key" @input="lifetime_key_update")
            button.button.is-large(slot="trigger")
              span
                | {{current_lifetime_info.name}}
              b-icon(icon="menu-down")
            b-dropdown-item(v-for="record in lifetime_infos" :value="record.key" :key="record.key")
              | {{record.name}}

  .columns
    .column
      - if Rails.env.development?
        .box
          | current_rest_counter: {{current_rest_counter}}<br>
          | think_counter: {{think_counter}}<br>
          | clock_counts: {{clock_counts}}<br>
          | human_side_key: {{human_side_key}}<br>
          | current_membership_is_self_p: {{current_membership_is_self_p}}<br>
          | flip: {{flip}}<br>

      .box
        div v-if="battle_begin_at"
          .has-text-centered.is-size-5
            template v-if="!battle_end_at && current_membership_is_self_p"
              button.button.is-primary.is-medium.is-outlined(@click="give_up_game_end") 投了
            .is-pulled-right v-html="time_format('black')"
            .is-pulled-left  v-html="time_format('white')"
        .is-clearfix

        shogi-player(
          :run_mode="run_mode"
          :kifu_body="kifu_body_sfen"
          :key_event_capture="false"
          :slider_show="true"
          :sfen_show="true"
          :controller_show="true"
          :theme="'real'"
          :size="'large'"
          :sound_effect="true"
          :volume="0.5"
          @update:play_mode_long_sfen="play_mode_long_sfen_set"
          :human_side="human_side_key"
          :flip="flip"
        )
      .box
        .title.is-4= "棋譜"
        b-input :value="human_kifu_text" type="textarea" readonly="readonly"

    .column
      .box
        .title.is-4= "チャット"
        table.table.is-narrow.is-fullwidth
          tr v-for="e of latest_room_chat_messages"
            td
              span.has-text-grey
                = "{{e.chat_user.name}}： "
              = " "
              span v-html="e.message"
        .field
          .control
            input.input.is-large.is-primary type="text" autocomplete="off" v-model.trim="message" @keydown.enter="message_enter"
        .field
          .control
            button.button.is-primary @click="message_enter"
              | 送信
      .box
        .title.is-4= "参加者"
        b-table(:data="room_members" :paginated="false" :per-page="10")
          template slot-scope="props"
            b-table-column(label="名前")
              messenger :message_to="props.row.chat_user"
              template v-if="user_self_p(props.row.chat_user)"
                = " *"
            b-table-column(label="状態")
              / template v-if="props.row.chat_user.online_at"
              template v-if="props.row.fighting_now_at"
                b-icon icon="access-point" class="has-text-success"
              template v-else=""
                b-icon icon="access-point" class="has-text-grey-lighter"
            b-table-column(label="手番")
              | {{location_key_name(props.row)}}
              | {{location_mark(props.row)}}
      .box
        .title.is-4= "観戦者"
        b-table(:data="watch_users" :paginated="false" :per-page="10")
          template slot-scope="props"
            b-table-column(field="name" label="名前" sortable)
              messenger :message_to="props.row"
              template v-if="user_self_p(props.row)"
                = " *"


  - if Rails.env.development?
    .columns
      .column
        .box
          .title.is-4 Vue Internal Variables
          table.table(border=1)
            tr(v-for="(value, key) in $data")
              th v-text="key"
              td v-text="value"
        .box
          .title.is-4 Vue Computed Results
          table.table(border=1)
            tr(v-for="(e, key) in _computedWatchers")
              th v-text="key"
              td v-text="e.value"
                
  p
    = link_to("ロビーに戻る", [:resource_ns1, :chat_rooms], :class => "button")

/ br
/ br
/ .box
/   .title.is-4= "@chat_room_app_params"
/   = html_format(JSON.load(@chat_room_app_params.to_json))
/
/ .box
/   = html_format({"cookies.signed[:chat_user_id]" => cookies.signed[:chat_user_id]})
/
/ .box
/   .title.is-4= "ChatUser"
/   = html_format(current_record.chat_users)
/   .title.is-4= "RoomChatMessage"
/   = html_format(current_record.room_chat_messages)

/ #lobby_app
/   - if Rails.env.development?
/     = "{{latest_status_list}}"
