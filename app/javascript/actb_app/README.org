* 構造

application (+ store)
  + room_message
  + header
  + lobby
  + matching (include matching_interval)
  + battle
  + result
  + builder (かなり疎結合)

・support はすべてに mixin
・builder だけは完全分離で他は分離できないので基本indexにすべてのメソッドがある
・ライブラリではないので $parent をむしろ積極的に使っていく

* 重要

・Vuex を使うな
・どうしてもグローバル変数にしないといけなくなったときでも Vuex を使うな
・死んでも Vuex を使うな

* rule_key
|----------------+--------------+------------------------------------------------|
| marathon_rule  | マラソン     | マイペースに先にゴールした方が勝ち             |
| singleton_rule | シングルトン | 一人しか答える権利がない早押しクイズ形式       |
| hybrid_rule    | ハイブリッド | 同時進行だけど一方が答えると両方次の問題に進む |
|----------------+--------------+------------------------------------------------|

* sub_mode
|-------------+------------------------|
| sm1_standby | 最初                   |
| sm2_readygo | 開始前の待ち時間       |
| sm3_deden   | 問題番号表示           |
| sm4_tactic  | ユーザー考え中・操作中 |
| sm5_correct | 正解「○」表示中       |
| sm6_timeout | 時間切れ表示中         |
|-------------+------------------------|

* sub_mode が sm4_tactic のときの x_mode (singleton_rule 専用)
|----------+--------------------------------|
| x1_think | 両者が問題を見て考えている     |
| x2_play  | わかったので自分だけが操作中   |
| x3_see   | 自分以外は相手の操作を見ている |
|----------+--------------------------------|

* チャンネル
|--------+--------------------------------+----------------------+-----------|
| name   |                                | 接続                 | スコープ  |
|--------+--------------------------------+----------------------+-----------|
| School | 接続中の人数などを配信する     | 常時                 | 全体      |
| Lobby  | マッチングしたら部屋を配信する | ロビーとマッチング中 | 全体      |
| Room   | 対戦するための部屋             | 対戦中のみ常時       | room_id   |
| Battle | 対戦時                         | バトル毎に作り直す   | battle_id |
|--------+--------------------------------+----------------------+-----------|

* 対戦までの流れ

|--------+--------------------+--------------------------------+---------------+--------------+----------------|
| 配信元 |                    |                                |               | 購読中       |                |
|--------+--------------------+--------------------------------+---------------+--------------+----------------|
|        | matching_search    | マッチング中                   |               |              |                |
| Lobby  | room_broadcasted   | 成立したので部屋を配信         |               | Lobby        |                |
|        | -> room_setup      | 部屋(ID)で購読する             | Lobby購読停止 | Room         | チャット初期化 |
| Room   | battle_broadcasted | するとバトル(ID)が送られてくる |               | Room,        |                |
|        | -> battle_setup    | そのバトル(ID)でバトルを購読   |               | Room, Battle |                |
|--------+--------------------+--------------------------------+---------------+--------------+----------------|

* 変数

|-------------------+----------------+--------------------------------|
| name              |                |                                |
|-------------------+----------------+--------------------------------|
| current_questtion | 今出題中の問題 | この用途以外に使ってはいけない |
|-------------------+----------------+--------------------------------|


* 問題

開発環境をiPhoneで見たときドメインが異なるため配信されない
そのためデバッグモードで結果画面に行けない
ただ単に行けるようにはできるが、そうするとPCで見たとき再戦ができなくなる

* TODO

Nuxt.js 移行
