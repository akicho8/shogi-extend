# -*- coding: utf-8; mode: nginx; compile-command: "scp nginx_default.conf i:/etc/nginx/conf.d/default.conf && ssh i 'sudo nginx -t && sudo systemctl restart nginx'; curl -sI https://shogi-extend.com/ | head -1; ; curl -sI https://www.shogi-extend.com/ | head -1" -*-

server {
    listen       80;
    server_name  localhost;

    # rewrite ^/shogi/?(.*)$ https://www.shogi-extend.com/$1 permanent;

    # https://qiita.com/HeRo/items/f9eb8d8a08d4d5b63ee9
    # http://shogi-extend.com/.well-known/acme-challenge
    # http://www.shogi-extend.com/.well-known/acme-challenge
    #
    # location ^~ /.well-known/acme-challenge/ {
    #     default_type "text/plain";
    #     root {{doc_root}};
    # }

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

upstream pumasocket {
    server unix:///var/www/shogi_web_production/shared/tmp/sockets/puma.sock;
    # server unix:///var/www/shogi_web_production/current/tmp/sockets/puma.sock;
    # server unix:///var/www/shogi_web_production/releases/20200502030211/tmp/sockets/puma.sock;
}

server {
    listen 80;
    server_name .shogi-extend.com; # *.shogi-extend および shogi-extend

    # https://qiita.com/HeRo/items/f9eb8d8a08d4d5b63ee9
    # http://shogi-extend.com/.well-known/acme-challenge
    # location ^~ /.well-known/acme-challenge/ {
    #     default_type "text/plain";
    #     root "{{doc_root}}";
    # }

    # location / {
    return 301 https://www.shogi-extend.com$request_uri;
    # }

    # root /var/www/shogi_web_production/current/public;
    #
    # location /s/ {
    #     index index.html;
    # }
    #
    # location / {
    #     # index index.html;
    #     try_files $uri @proxy;
    # }
    #
    # location @proxy {
    #     proxy_set_header    Host                $http_host;
    #     proxy_set_header    X-Real-IP           $remote_addr;
    #     proxy_set_header    X-Forwarded-Host    $host;
    #     proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    #     proxy_set_header    X-Forwarded-Proto   $scheme;
    #     proxy_pass http://pumasocket;
    # }
}

# www なし
server {
    listen 443 ssl;
    ssl_certificate     /etc/letsencrypt/live/shogi-extend.com/fullchain.pem; # redirect しても設定は必要
    ssl_certificate_key /etc/letsencrypt/live/shogi-extend.com/privkey.pem;

    server_name shogi-extend.com;
    return 301 https://www.shogi-extend.com$request_uri;
}

# www あり
server {
    listen 443 ssl;             # listen 443 ssl default_server; かかないとだめ？
    ssl_certificate     /etc/letsencrypt/live/www.shogi-extend.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.shogi-extend.com/privkey.pem;

    server_name www.shogi-extend.com;

    root /var/www/shogi_web_production/current/public;

    rewrite ^/adapter(.*)$     /app/adapter$1     last;
    # rewrite ^/share-board(.*)$ /app/share-board$1 last;
    rewrite ^/cpu-battle(.*)$  /app/cpu-battle$1  last;
    rewrite ^/vs-clock(.*)$    /app/vs-clock$1    last;
    rewrite ^/stopwatch(.*)$   /app/stopwatch$1   last;
    rewrite ^/xy(.*)$          /app/xy$1          last;
    rewrite ^/about/(.*)$      /app/about/$1      last;

    # location ~ ^/(.*)/$ {
    #     return 301 path # トレイリングスラッシュを消す
    # }

    # http://www.shogi-extend.com/.well-known/acme-challenge
    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/letsencrypt;
    }
    # location = /.well-known/acme-challenge/ {
    #     return 404;
    # }

    location / {
        satisfy any;
        allow 180.3.136.40; # 自宅IP
        allow 160.16.91.95; # staging鯖自身
        deny all;
        auth_basic "Restricted (staging)";
        auth_basic_user_file /etc/nginx/.htpasswd;

        # /foo なら /foo.html を見てなければ /foo/index.html を探す
        try_files $uri.html $uri/index.html $uri @proxy;
    }

    location /x-cable {
        proxy_pass http://pumasocket;
        proxy_http_version 1.1;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # proxy_set_header Upgrade websocket;
        # proxy_set_header Connection Upgrade;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
    }

    # location /x-cable/ {
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_cache_bypass $http_upgrade;
    #     proxy_set_header Host $host;
    #     proxy_pass http://pumasocket;
    # }

    location @proxy {
        proxy_set_header Host              $http_host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://pumasocket;
    }

    # https://ja.nuxtjs.org/faq/nginx-proxy/
    gzip            on;
    gzip_types      text/plain application/xml text/css application/javascript;
    gzip_min_length 1000;

    location /app/ {
        expires $expires;
        proxy_redirect                      off;
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_read_timeout    1m;
        proxy_connect_timeout 1m;
        proxy_pass http://127.0.0.1:4000;
    }
}
