task :m => :mackerel
desc "[m] mackerel"
task :mackerel do
  system <<~EOT
ssh i 'sudo touch               /etc/mackerel-agent/mackerel-agent.conf'
ssh i 'sudo chown deploy:deploy /etc/mackerel-agent/mackerel-agent.conf'
scp mackerel-agent.conf i:/etc/mackerel-agent
ssh i 'mackerel-agent configtest'
ssh i 'sudo systemctl restart mackerel-agent'
ssh i 'sudo systemctl status mackerel-agent'
ssh i 'cat /etc/mackerel-agent/conf.d/apikey.conf'
  EOT
end

task :d => :debug
desc "[d] debug"
task :debug do
  system <<~EOT
  scp custom_profile.sh i:/etc/profile.d

  ssh i 'sudo chown deploy:deploy -R /var/lib/nginx'

  scp nginx.conf i:/etc/nginx/nginx.conf
  ssh i 'sudo nginx -t && sudo systemctl restart nginx'

  scp nginx_default.conf i:/etc/nginx/conf.d/default.conf
  ssh i 'sudo nginx -t && sudo systemctl restart nginx'

  curl -sI https://www.shogi-extend.com/ | head -1

  scp puma.service i:/etc/systemd/system
  ssh i 'sudo systemctl daemon-reload'
  ssh i 'sudo systemctl enable puma'
  ssh i 'sudo systemctl restart puma'
  ssh i 'sudo systemctl status puma'
  ssh i 'sudo systemctl reset-failed puma'

  scp sidekiq.service i:/etc/systemd/system
  ssh i 'sudo systemctl daemon-reload'
  ssh i 'sudo systemctl enable sidekiq'
  ssh i 'sudo systemctl restart sidekiq'
  ssh i 'sudo systemctl status sidekiq'
  ssh i 'sudo systemctl reset-failed sidekiq'

  scp nuxt.service i:/etc/systemd/system
  ssh i 'sudo systemctl daemon-reload'
  ssh i 'sudo systemctl enable nuxt'
  ssh i 'sudo systemctl restart nuxt'
  ssh i 'sudo systemctl status nuxt'
  ssh i 'sudo systemctl reset-failed nuxt'
  EOT
end

task :s => :status
desc "[s] status"
task :status do
  system <<~EOT
  ssh i sudo systemctl status nginx
  ssh i sudo systemctl status puma
  ssh i sudo systemctl status sidekiq
  ssh i sudo systemctl status nuxt

  curl -sI https://www.shogi-extend.com/ | head -1
  curl -sI https://shogi-extend.com/     | head -1
  curl -sI http://shogi-extend.com/      | head -1
  curl -sI http://www.shogi-extend.com/  | head -1
  EOT
end
