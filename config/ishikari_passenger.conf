# -*- coding: utf-8; compile-command: "scp ishikari_passenger.conf i:/etc/httpd/conf.d && ssh i sudo /usr/sbin/apachectl configtest && ssh i sudo /usr/sbin/apachectl -S && ssh i sudo systemctl restart httpd && open https://www.shogi-extend.com/" -*-

# サーバー側に配置する Apache の設定
#
# 参考
# https://knowledge.sakura.ad.jp/10534/
#
# 手順
# 1. http だけ動くものを作る → /etc/httpd/conf.d/ishikari_passenger.conf
# 2. certbot --apache -d shogi-extend.com -d www.shogi-extend.com -d staging.shogi-extend.com
# 3. /etc/httpd/conf.d/ishikari_passenger-lt-ssl.conf が生成される
# 4. それを元の方にコピペして /etc/httpd/conf.d/foo-le-ssl-conf の方は消す
# 5. あと調整

################################################################################ Passenger

LoadModule passenger_module /usr/local/rbenv/versions/2.6.5/lib/ruby/gems/2.6.0/gems/passenger-6.0.4/buildout/apache2/mod_passenger.so
<IfModule mod_passenger.c>
  PassengerRoot /usr/local/rbenv/versions/2.6.5/lib/ruby/gems/2.6.0/gems/passenger-6.0.4
  PassengerDefaultRuby /usr/local/rbenv/versions/2.6.5/bin/ruby

  # これがないと passenger-status や passenger-config が動かない
  # PASSENGER_INSTANCE_REGISTRY_DIR=/var/run/passenger-instreg を設定しているかどうかは関係ない
  # https://www.pistolfly.com/weblog/2016/01/centos7%E3%81%A7passenger-config%E3%82%84passenger-status%E3%81%8C%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%AB%E3%81%AA%E3%82%8B.html
  PassengerInstanceRegistryDir /var/run/passenger-instreg

  PassengerErrorOverride on

  PassengerMaxPoolSize 3
  # process down
  PassengerPoolIdleTime 180
  # restart if request >= 30
  PassengerMaxRequests 30

  PassengerFriendlyErrorPages on
</IfModule>

################################################################################ http://ik1-413-38753.vs.sakura.ne.jp/

<VirtualHost *:80>
  DocumentRoot /var/www/default
  <Directory /var/www/default>
    Options +MultiViews
  </Directory>
</VirtualHost>

################################################################################ http://www.shogi-extend.com/ http://shogi-extend.com/ http://staging.shogi-extend.com/

<VirtualHost *:80>
  ServerName shogi-extend.com
  ServerAlias www.shogi-extend.com
  ServerAlias staging.shogi-extend.com

  #〜 もともとここに http での設定が入っていたが全部 https に飛ばすので不要になった 〜

  RewriteEngine On
  RewriteCond %{SERVER_NAME} =shogi-extend.com [OR]
  RewriteCond %{SERVER_NAME} =www.shogi-extend.com [OR]
  RewriteCond %{SERVER_NAME} =staging.shogi-extend.com
  RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
</VirtualHost>

################################################################################ https://www.shogi-extend.com/

<VirtualHost *:443>
  ServerName www.shogi-extend.com
  ServerAlias shogi-extend.com

  DocumentRoot /var/www/shogi_web_production/current/public

  <Directory /var/www/*/current/public>
    Allow from all
    Options -MultiViews
  </Directory>

  SetEnv MY_APP_HOST "www.shogi-extend.com"

  # shogi-extend.com できたら www.shogi-extend.com へ移動
  # staging とはここが違う
  RewriteEngine On
  RewriteCond %{SERVER_NAME} =shogi-extend.com
  RewriteRule ^ https://www.%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]

  <Location />
    ErrorDocument 404 /404.html
    ErrorDocument 422 /422.html
    ErrorDocument 500 /500.html

    RewriteEngine On
    RewriteCond /var/www/shogi_web_production/current/public/system/maintenance.html -f
    RewriteCond %{REQUEST_URI} !\.(css|jpg|gif|png|ico)$
    RewriteCond %{SCRIPT_FILENAME} !maintenance.html
    # 自宅からだけはアクセス許可
    RewriteCond %{REMOTE_ADDR} !=122.18.120.198
    RewriteRule ^.*$ /system/maintenance.html [R,L]
  </Location>

  # エラーページ
  Alias /static /var/www/shogi_web_production/current/static_app/dist
  <Location /system/static>
    PassengerEnabled off
    Options All

    # https://router.vuejs.org/ja/guide/essentials/history-mode.html#%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%81%AE%E8%A8%AD%E5%AE%9A%E4%BE%8B
    <IfModule mod_rewrite.c>
      RewriteEngine On
      RewriteBase /system/static
      RewriteRule ^system/static/index\.html$ - [L]
      RewriteCond %{REQUEST_FILENAME} !-f
      RewriteCond %{REQUEST_FILENAME} !-d
      RewriteRule . /system/static/index.html [L]
    </IfModule>
  </Location>

  # production, staging 共通
  Include /etc/letsencrypt/options-ssl-apache.conf
  SSLCertificateFile /etc/letsencrypt/live/shogi-extend.com/cert.pem
  SSLCertificateKeyFile /etc/letsencrypt/live/shogi-extend.com/privkey.pem
  SSLCertificateChainFile /etc/letsencrypt/live/shogi-extend.com/chain.pem
</VirtualHost>

################################################################################ https://staging.shogi-extend.com/

<VirtualHost *:443>
  ServerName staging.shogi-extend.com

  DocumentRoot /var/www/shogi_web_staging/current/public
  PassengerAppEnv staging

  <Directory /var/www/*/current/public>
    Allow from all
    Options -MultiViews
  </Directory>

  SetEnv MY_APP_HOST "staging.shogi-extend.com"

  # 旧サイトから移転する場合の例
  # Redirect permanent / https://www.shogi-extend.com/

  # 旧サイトから /shogi/.* の階層を考慮して移動する例
  # RewriteEngine on
  # RewriteRule ^/?shogi/(.*)$ https://www.shogi-extend.com/$1 [R=301,L]

  <Location />
    ErrorDocument 404 /404.html
    ErrorDocument 422 /422.html
    ErrorDocument 500 /500.html

    RewriteEngine On
    RewriteCond /var/www/shogi_web_staging/current/public/system/maintenance.html -f
    RewriteCond %{REQUEST_URI} !\.(css|jpg|gif|png|ico)$
    RewriteCond %{SCRIPT_FILENAME} !maintenance.html
    # 自宅からだけはアクセス許可
    RewriteCond %{REMOTE_ADDR} !=114.164.93.234
    RewriteRule ^.*$ /system/maintenance.html [R,L]
  </Location>

  Alias /static /var/www/shogi_web_staging/current/static_app/dist
  <Location /system/static>
    PassengerEnabled off
    Options All

    # https://router.vuejs.org/ja/guide/essentials/history-mode.html#%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%81%AE%E8%A8%AD%E5%AE%9A%E4%BE%8B
    <IfModule mod_rewrite.c>
      RewriteEngine On
      RewriteBase /system/static
      RewriteRule ^system/static/index\.html$ - [L]
      RewriteCond %{REQUEST_FILENAME} !-f
      RewriteCond %{REQUEST_FILENAME} !-d
      RewriteRule . /system/static/index.html [L]
    </IfModule>
  </Location>

  # production, staging 共通
  Include /etc/letsencrypt/options-ssl-apache.conf
  SSLCertificateFile /etc/letsencrypt/live/shogi-extend.com/cert.pem
  SSLCertificateKeyFile /etc/letsencrypt/live/shogi-extend.com/privkey.pem
  SSLCertificateChainFile /etc/letsencrypt/live/shogi-extend.com/chain.pem
</VirtualHost>
